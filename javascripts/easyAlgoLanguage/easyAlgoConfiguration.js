define([],function(){var e="functionsDescription",t="skipedFunction",n="blocNames",r="FIN_SI",i="SI_NON",s="SI_NON_SI",o="FIN_TANT_QUE",u="FIN_POUR",a="FIN_FONCTION",f="autoCloseTag",l="while",c="varTypes",h="booleanName",p="translateVarType",d={};d.functions={aleatoire:function(e,t){return e=e||0,t=t||100,Math.floor(Math.random()*t+e)},en_entier:function(e){return parseInt(e,10)},taille:function(e){var t=0;for(var n in e)t++;return t},racine_carree:Math.sqrt,puissance:Math.pow,arondi_inferieur:Math.floor,arondi_superieur:Math.ceil,arondi:Math.round,cosinus:Math.cos,sinus:Math.sin,tangente:Math.tan,exponentielle:Math.exp,arctangente:Math.atan,arcsinus:Math.asin,arccosinus:Math.acos,abs:Math.abs,logarithme:Math.log,radians:function(e){return e*Math.PI/180},degre:function(e){return e*180/Math.PI},non:function(e){return!e},to_ascii:function(e){return e.charCodeAt(0)},to_char:function(e){return String.fromCharCode(e)},rationaliser:function(e){var t=e<0?"-":"";e=Math.abs(e);var n=1e-6,r=1,i=0,s=0,o=1,u=e;do{var a=Math.floor(u),f=r;r=a*r+i,i=f,f=s,s=a*s+o,o=f,u=1/(u-a)}while(Math.abs(e-r/s)>e*n);return s==1?t+r:Math.abs(r)==Infinity||Math.abs(s)==Infinity?t+e:t+r+"/"+s+(s>100?" ("+t+e+")":"")},couper:function(e,t){return e.split(t)},joindre:function(e,t){return e.join(t||" ")},sous_chaine:function(e,t,n){return e.substring(t,n)},index:function(e,t,n){return e.indexOf(t,n)}},d[e]={aleatoire:"Permet de retourner un nombre au hasard entre un minimum et un maximum. par exemple aleatoir(0; 10) retourne un nombre entre 0 et 10.",taille:"Permet de connaitre la taille d'un tableau ou d'une chaine",en_entier:"Permet de convertir une chaine de caractére en un nombre",racine_carree:"Permet de calculer la racine carée d'un nombre",arondi_inferieur:"Permet d'arondir un nombre à l'entier inférieur le plus proche",arondi_superieur:"Permet d'arondir un nombre à l'entier superieur le plus proche",arondi:"Permet de calculer l'arondi le plus proche du nombre",puissance:"Permet de mettre un nombre à la puissance x puissance(nombre; x). Exemple : 4*4*4 = puissance(4; 3)",cosinus:"Permet de calculer le cosinus du paramètre",sinus:"Permet de calculer le sinus du paramètre",tangente:"Permet de calculer la tangente du paramètre. Le paramètre doit être en radians",exponentielle:"Permet de calculer l'exponentielle du nombre passé en paramètre",arctangente:"Permet de calculer l'arctangente du paramètre",arcsinus:"Permet de calculer l'arcsinus du paramètre",arccosinus:"Permet de calculer l'arccosinus du paramètre",abs:"Retourne la valeur absolue du paramètre",radians:"Converti le paramètre de degré en radian",degre:"Converti le paramètre de radian en degré",logarithme:"Calcul logarithme népérien du paramètre",to_ascii:"Retourne le nombre ascii associé au caractére en paramètre ",to_char:"Retourne le caractére associé au code ascii en paramètre",rationaliser:"Retourne une chaine qui représente le nombre sous forme de fraction. 0.333333333 retourne 1/3",couper:"Retourner un tableau qui est la chaine découpée en fonction d'un separateur. Exemple couper('Bonjour le monde'; ' ') = ['Bonjour';'Le';'Monde']",sous_chaine:'Retourne une sous chaine de la chaine en paramétre. Prend en paramétre la chaine, le debut et la fin de la sous chaine souhaitée. Exemple sous_chaine("Bonjour"; 0; 2) = "Bo", sous_chaine("Bonjour"; 1) = "onjour".',index:'Retourne la position de la chaine cherchée dans la chaine. index("Bonjour"; "o") = 1, index("Bonjour"; "o"; 2) = 4',joindre:'Join les elements d\'un tableau et retourne une chaine de caractére. Exemple : joindre(["bla"; "bla"], " ") = "bla bla"'},d[t]=["eval"],d[n]={SI:[r,i,s],TANT_QUE:[o],POUR:[u],SI_NON:[r],DEFINIR_FONCTION:[a],SI_NON_SI:[r,i,s]},d[f]={"SI ":r,POUR:u,TANT_QUE:o,DEFINIR_FONCTION:a},d.openBlock={SI:{tag:"if",error:"Un SI doit être terminé par un FIN_SI"},POUR:{tag:"for",error:"Un POUR doit être terminé par un FIN_POUR"},TANT_QUE:{tag:l,error:"Un TANT_QUE doit être terminé par un FIN_TANT_QUE"}},d.endBlock={FIN_SI:{error:"un FIN_SI doit avoir un SI correspondant.",startTag:"if"},FIN_POUR:{error:"un FIN_POUR doit avoir un POUR correspondant.",startTag:"for"},FIN_TANT_QUE:{error:"un FIN_TANT_QUE doit avoir un TANT_QUE correspondant.",startTag:l}},d[c]={NOMBRE:"number",CHAINE:"string",TABLEAU:"array",BOOLEEN:"boolean"},d[h]={VRAI:!0,FAUX:!1},d[p]={},d.writeOutput=function(){return{erreur:"error",info:"info"}};for(var v in d[c])d[p][d[c][v]]=v;return d.getBooleanName=function(){return d[h]},d.getVarTypes=function(){return d[c]},d.getFunctions=function(){return this.functions},d.getFunctionsDescription=function(){return this[e]},d.getSkipedFunction=function(){return this[t]},d.getStartToEndBlock=function(){return this[n]},d.getStartToLastEndBlock=function(){return this[n]},d.getValidatorOpenBlock=function(){return this.openBlock},d.getValidatorEndBlock=function(){return this.endBlock},d.getAutoCloseTag=function(){return this[f]},d});